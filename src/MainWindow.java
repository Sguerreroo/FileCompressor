
import static java.awt.image.ImageObserver.HEIGHT;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Entrar
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        cf.setWindow(this);
        calcelButton.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pathTo = new javax.swing.JTextField();
        pathFrom = new javax.swing.JTextField();
        browseFromPathButton = new javax.swing.JButton();
        browseToPathButton = new javax.swing.JButton();
        compressButton = new javax.swing.JButton();
        calcelButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pathTo.setEnabled(false);

        pathFrom.setEnabled(false);

        browseFromPathButton.setText("Cambiar");
        browseFromPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFromPathButtonActionPerformed(evt);
            }
        });

        browseToPathButton.setText("Cambiar");
        browseToPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseToPathButtonActionPerformed(evt);
            }
        });

        compressButton.setText("Comprimir");
        compressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compressButtonActionPerformed(evt);
            }
        });

        calcelButton.setText("Cancelar");
        calcelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pathFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(pathTo))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(calcelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(browseToPathButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(browseFromPathButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(compressButton)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseFromPathButton))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseToPathButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(calcelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(compressButton)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected void setProgress(int progress){
        progressBar.setValue(progress);
        progressBar.repaint();
    }
    private void browseFromPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFromPathButtonActionPerformed
        if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            pathFrom.setText(fc.getSelectedFile().getAbsolutePath());
            cf.setDirectoryFrom(fc.getSelectedFile());
        }
    }//GEN-LAST:event_browseFromPathButtonActionPerformed

    private void browseToPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseToPathButtonActionPerformed
        if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            pathTo.setText(fc.getSelectedFile().getAbsolutePath());
            cf.setDirectoryTo(fc.getSelectedFile());
        }
    }//GEN-LAST:event_browseToPathButtonActionPerformed

    
    private boolean checkTextField(){
        if(pathFrom.getText().equals("") || pathTo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Elija un directorio", "Information", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
            
        if(pathFrom.getText().equals(pathTo.getText())){
            JOptionPane.showMessageDialog(null, "Los directorios no puedenn ser iguales", "Information", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        return true;
    }
    private void compressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compressButtonActionPerformed
        if(checkTextField()){
            cf.execute();
            compressButton.setVisible(false);
            calcelButton.setVisible(true);
        }
        
    }//GEN-LAST:event_compressButtonActionPerformed
    
    protected void reInitialiceCompressFile(){
        cf =  new CompressFile();
        if(!pathFrom.getText().equals("")){
            cf.setDirectoryFrom(new File(pathFrom.getText()));
        }
        if(!pathTo.getText().equals("")){
            cf.setDirectoryTo(new File(pathTo.getText()));
        }
        calcelButton.setVisible(false);
        compressButton.setVisible(true);
        cf.setWindow(this);
    }
    private void calcelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcelButtonActionPerformed
        cf.cancel(true);
        reInitialiceCompressFile();
        calcelButton.setVisible(false);
    }//GEN-LAST:event_calcelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    private final JFileChooser fc = new JFileChooser();
    private CompressFile cf = new CompressFile();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseFromPathButton;
    private javax.swing.JButton browseToPathButton;
    private javax.swing.JButton calcelButton;
    private javax.swing.JButton compressButton;
    private javax.swing.JTextField pathFrom;
    private javax.swing.JTextField pathTo;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
